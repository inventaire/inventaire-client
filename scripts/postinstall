#!/usr/bin/env bash

set -eu

mkdir -p ./public/json ./vendor
cp -r app/assets/* ./public

# See https://git-scm.com/docs/git-config#Documentation/git-config.txt-blameignoreRevsFile
git config blame.ignoreRevsFile .git-blame-ignore-revs

echo "// A polyfill for visualViewport is required until we stop supporting Firefox < v91
// https://developer.mozilla.org/en-US/docs/Web/API/Window/visualViewport#browser_compatibility
// Source: https://github.com/WICG/visual-viewport/blob/gh-pages/polyfill/visualViewport.js
" > ./vendor/visual_viewport_polyfill.js
curl -sk https://raw.githubusercontent.com/WICG/visual-viewport/44deaba/polyfill/visualViewport.js >> ./vendor/visual_viewport_polyfill.js

npm run build

echo -e "\e[0;32msetup githooks\e[0m"
# Make git hooks trackable (see https://stackoverflow.com/a/4457124/3324977)
rm -rf .git/hooks
# Symbolic link is relative to the .git directory, thus the path starting with ".."
ln -s ../scripts/githooks .git/hooks
echo -e "\e[0;32msetup githooks: done\e[0m"

echo -e "\e[0;32mclear node_modules cache\e[0m"
# Remove assets cached by node modules, in particular webpack cached builds,
# as webpack does not invalidate its cache on modules updates.
# This is recommanded in https://webpack.js.org/guides/build-performance/#persistent-cache
# See also https://webpack.js.org/configuration/cache/
rm -rf ./node_modules/.cache

echo -e "\e[0;32mpostinstall: done\e[0m"

# Exit with code 0 (apparently required for Docker image build to succeed)
true