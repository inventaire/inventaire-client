$grey: #636466;
$dark-grey: #222;
$default-text-color: $dark-grey;
$darker-grey: #1a1a1a;
$light-grey: #eee;
$lighter-grey: #f2f2f2;
// The lightest grey that can be used for buttons with white text
// Contrast ratio of 3, see https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable/Color_contrast
$soft-grey: #959595;
$glow: rgba(158, 202, 237, 0.7);
$off-white: #f5f5f5;
$green-tree: #68a431;
$soft-red: #cf2408;
$yellow: #ffd402;

$primary-color: #16212c;
$secondary-color: $yellow;
$warning-color: #e13a00;
$success-color: #4eba76;
$light-blue: #319cc2;
$link-blue: #3243bb;
$danger-color: #ff4e4e;
$darker-danger-color: #ff5775;
$label-grey: #4d4d4d;

$body-bg: $off-white;
$contrast: #fff;
$global-background-contrast-color: rgba($light-grey, 0.98);
$panel-bg: $contrast;
$body-font-color: #222;
$tools-active-bg: #222;

// keep in sync with server/lib/emails/activity_summary/transactions_colors.js
$giving-color: #feb1ba;
$lending-color: #9fd5b3;
$selling-color: #ffe567;
$inventorying-color: #bfbfbf;

$private-color: $dark-grey;
$private-color-text: white;
$network-color: rgba(130, 130, 130, 0.5);
$network-color-text: white;
$public-color: $light-grey;
$public-color-text: $dark-grey;

$wikidata-green: #339966;
$wikidata-blue: #006699;
$facebook-color: #425f9c;
$twitter-color: #55acee;
$youtube-color: #e62117;

$unread-color: #edf7fb;

$inventory-nav-grey: #eee;

@mixin hover-darken($color, $darken:15%) {
  background-color: $color;
  @include transition(background-color);
  &:not(.disabled):not(:disabled){
    &:hover, &:focus{
      background-color: darken($color, $darken);
    }
  }
}

@mixin color-class($color, $contrast:white, $darken:15%) {
  color: $color;
  &.button{
    color: $contrast;
    @include hover-darken($color, $darken);
  }
}

@mixin text-hover($color, $hover:null, $lighten:15%){
  color: $color;
  @include transition(color);
  &:hover, &:focus{
    @if $hover { color: $hover; }
    @else { color: lighten($color, $lighten); }
  }
}

@mixin text-hover-darken($color, $hover:null, $darken:15%){
  color: $color;
  @include transition(color);
  &:hover, &:focus{
    @if $hover { color: $hover; }
    @else { color: darken($color, $darken); }
  }
}

@mixin bg-hover($bg-color, $darken:15%){
  background-color: $bg-color;
  @include transition(background-color);
  &:not(.disabled):not(:disabled){
    &:hover, &:focus{
      background-color: darken($bg-color, $darken);
    }
  }
}

@mixin bg-hover-svelte($bg-color, $darken:15%){
  background-color: $bg-color;
  @include transition(background-color);
  &:not(:disabled){
    &:hover, &:focus{
      background-color: darken($bg-color, $darken);
    }
  }
}

@mixin bg-hover-lighten($bg-color, $lighten:15%){
  background-color: $bg-color;
  @include transition(background-color);
  &:not(.disabled):not(:disabled){
    &:hover, &:focus{
      background-color: lighten($bg-color, $lighten);
    }
  }
}

@mixin bg-hover-lighten-svelte($bg-color, $lighten:15%){
  background-color: $bg-color;
  @include transition(background-color);
  &:not(:disabled){
    &:hover, &:focus{
      background-color: lighten($bg-color, $lighten);
    }
  }
}

@mixin bg-hover-from-to($from-bg-color, $to-bg-color){
  background-color: $from-bg-color;
  @include transition(background-color);
  &:not(:disabled){
    &:hover, &:focus{
      background-color: $to-bg-color;
    }
  }
}

@mixin dangerous-action(){
  @include transition(background-color, 0.2s);
  background-color: $grey;
  color: white;
  &:hover, &:focus{
    // Required to give the following rules priority over button general rules
    &:not(:disabled){
      color: white;
      background-color: $danger-color;
    }
  }
}

$shy-opacity: 0.6;
@mixin shy($opacity:$shy-opacity, $hover-opacity:1){
  opacity: $opacity;
  @include transition(opacity);
  &:hover, &:focus{
    opacity: $hover-opacity;
  }
}
